<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>template</groupId>
  <artifactId>starter-template</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    
    <docker.webapp.workdir>/opt/webapp</docker.webapp.workdir>
    <docker.repo.user>man4j</docker.repo.user>
    
    <version.spring>4.3.1.RELEASE</version.spring>
    <version.security>4.1.1.RELEASE</version.security>
    <version.junit>4.12</version.junit>
    <version.mockito>2.0.2-beta</version.mockito>
    <version.docker-plugin>0.15.9</version.docker-plugin>
    <version.mysql-connector>5.1.40</version.mysql-connector>
    
    <db.password>${docker.db.password}</db.password><!-- Пробрасываем свойство из settings.xml -->
  </properties>
  
  <profiles>
    <profile>
      <id>unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <dockerHost></dockerHost>
        <tagName>latest</tagName>
      </properties>
    </profile>

    <profile>
      <id>docker-host</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <dockerHost>tcp://91.201.42.128:2376</dockerHost>
        <tagName>${user.name}</tagName>
      </properties>
    </profile>

    <profile>
      <id>prepare-db-image</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>${version.docker-plugin}</version>
            
            <configuration>
              <dockerHost>${dockerHost}</dockerHost>
              <showLogs>true</showLogs><!-- or web,db,selenium etc -->
              <removeVolumes>true</removeVolumes>
              <images>
                <image>
                  <alias>db</alias>
                  <name>${docker.repo.user}/db:latest</name>
                  <build>
                    <from>mysql:5.7</from>
                    <nocache>true</nocache>
                    <assembly>
                      <basedir>/tmp</basedir>
                      <mode>tar</mode>
                      <inline xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                  xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
                                  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 http://maven.apache.org/xsd/assembly-1.1.3.xsd">
                        <files>
                          <file>
                            <source>${project.build.outputDirectory}/docker/init_db</source>
                            <fileMode>0777</fileMode>
                          </file>
                          <file>
                            <source>${project.build.outputDirectory}/docker/run_db</source>
                            <fileMode>0777</fileMode>
                          </file>
                          <file>
                            <source>${user.home}/dump.sql</source>
                          </file>
                        </files>
                      </inline>
                    </assembly>
                    <runCmds>
                      <runCmd>/tmp/init_db</runCmd>
                    </runCmds>
                    <entryPoint>/tmp/run_db</entryPoint>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  
  <dependencies>
    <dependency>
      <groupId>starter</groupId>
      <artifactId>starter</artifactId>
      <version>0.40</version>
    </dependency>
    
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>async-http-client</artifactId>
      <version>1.9.38</version>
    </dependency>
    
    <!-- test deps -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${version.spring}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>
      
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${version.mockito}</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <version>${version.security}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>*</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.security</groupId>
          <artifactId>*</artifactId>
        </exclusion>        
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>2.53.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>    
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/init_db</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/init_db</exclude>
        </excludes>
        <filtering>false</filtering>
      </resource>
    </resources>
    
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId><!-- Java SSH provider for Wagon API -->
        <artifactId>wagon-ssh</artifactId>
        <version>2.10</version>
      </extension>
    </extensions>
  
    <plugins>
      <plugin><!-- enable resource plugin without filtering bug -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
      </plugin>
      
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <configuration>
              <tasks>
                <copy todir="${project.build.outputDirectory}" preservelastmodified="true" overwrite="true">
                  <fileset dir="src/main/resources" />
                </copy>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>            
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${project.groupId}.Main</mainClass>
                </transformer>  
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/services/com.sun.tools.xjc.Plugin</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/cxf/cxf.extension</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                  <resource>META-INF/extensions.xml</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                  <resource>META-INF/cxf/extensions.xml</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/cxf/bus-extensions.txt</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                  <resource>META-INF/cxf/bus-extensions.xml</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                  <resource>META-INF/wsdl.plugin.xml</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                  <resource>META-INF/tools.service.validator.xml</resource>
                </transformer>                  
                <transformer implementation="org.apache.maven.plugins.shade.resource.XmlAppendingTransformer">
                  <resource>META-INF/cxf/java2wsbeans.xml</resource>
                </transformer>                                 
              </transformers>   
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>             
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${version.docker-plugin}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>docker_start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals> 
          </execution>
          <execution>
            <id>docker_stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dockerHost>${dockerHost}</dockerHost>
          <showLogs>true</showLogs><!-- or web,db,selenium etc -->
          <removeVolumes>true</removeVolumes>
          <images>
            <image>
              <alias>app_db</alias>
              <name>${docker.repo.user}/db:latest</name>
              <run>
                <ports>
                  <port>${app_db.port}:3306</port>
                </ports>
                <wait>
                  <time>60000</time>
                  <tcp><ports><port>3306</port></ports></tcp>
                </wait>
              </run>
            </image>
            
            <image>
              <alias>test_db</alias>
              <name>${docker.repo.user}/db:latest</name>
              <run>
                <ports>
                  <port>${test_db.port}:3306</port>
                </ports>
                <wait>
                  <time>60000</time>
                  <tcp><ports><port>3306</port></ports></tcp>
                </wait>
              </run>
            </image>
            
            <image>
              <alias>web</alias>
              <name>${docker.repo.user}/web:${tagName}</name>
              <build>
                <from>openjdk:8</from>
                <nocache>true</nocache>
                <workdir>${docker.webapp.workdir}</workdir>
                <assembly>
                  <basedir>${docker.webapp.workdir}</basedir>
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <cmd>
                  <shell>java -jar ${project.build.finalName}.${project.packaging}</shell>
                </cmd>
                <ports>
                  <port>8080</port>
                </ports>
              </build>
              <run>
                <env>
                  <LANG>en_US.UTF-8</LANG>
                  <spring_profiles_active>test</spring_profiles_active>
                  <db_password>${db.password}</db_password>
                </env>
                <ports>
                  <port>${web.host}:${web.port}:8080</port>
                </ports>
                <wait>
                  <time>60000</time>
                  <http>
                    <url>http://${web.host}:${web.port}</url>
                    <method>GET</method>
                    <status>200</status>
                  </http>
                </wait>
                <links>
                  <link>app_db</link>
                </links>
              </run>
            </image>
            
            <image>
              <alias>selenium</alias>
              <name>selenium/standalone-chrome-debug</name>
              <run>
                <ports>
                  <port>${selenium.port}:4444</port>
                  <port>${selenium.vnc.port}:5900</port>
                </ports>
                <wait>
                  <log>Selenium Server is up and running</log>
                </wait>
                <links>
                  <link>web</link>
                </links>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>4.0.3</version>
        <configuration>
          <cleanDisabled>true</cleanDisabled>
          <baselineOnMigrate>true</baselineOnMigrate>
          <locations>
            <location>filesystem:migrations</location>
          </locations>
        </configuration>
        <executions>
          <execution>
            <id>app_db_migration</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
            <configuration>
              <user>root</user>
              <password>${db.password}</password>
              <url>jdbc:mysql://${docker.host.address}:${app_db.port}/test_db</url>
            </configuration>
          </execution>
          <execution>
            <id>test_db_migration</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
            <configuration>
              <user>root</user>
              <password>${db.password}</password>
              <url>jdbc:mysql://${docker.host.address}:${test_db.port}/test_db</url>
            </configuration>
          </execution>
          <!-- 
          <execution>
            <id>devserver-migration</id>
            <phase>deploy</phase>
            <goals>
              <goal>migrate</goal>
            </goals>
            <configuration>
              <configFile>${flyway.config.file}</configFile>
            </configuration>
          </execution> -->
        </executions>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${version.mysql-connector}</version>
          </dependency>
        </dependencies>
      </plugin>
      
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <excludes>
            <exclude>integration/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <includes>
            <include>integration/**</include>
          </includes>
          <systemPropertyVariables>
            <test.automated>true</test.automated>
            <web.url>http://${docker.host.address}:${web.port}</web.url>
            <selenium.url>http://${docker.host.address}:${selenium.port}/wd/hub</selenium.url>
            <selenium.vnc>${docker.host.address}:${selenium.vnc.port}</selenium.vnc>
            <db.url>http://${docker.host.address}:${test_db.port}</db.url>
            <db.password>${db.password}</db.password>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.4</version>
        <configuration>
          <effort>Max</effort>
          <threshold>Low</threshold>
          <maxRank>20</maxRank>
        </configuration>
        <executions>
          <execution>
            <phase>test-compile</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.2</version>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      
      <!-- 
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>wagon-maven-plugin</artifactId>
        <version>1.0</version>
        <configuration>
          <url>scp://${deploy.address}</url>
          <serverId>${deploy.server}</serverId>
          <fromFile>${project.build.directory}/${project.build.finalName}.jar</fromFile>
          <toFile>/opt/web/${project.build.finalName}.jar</toFile>
          <commands>                
            <command>service web restart</command>
          </commands>
        </configuration>
        <executions>
          <execution>
            <id>upload</id>
            <phase>deploy</phase>
            <goals>
              <goal>upload-single</goal>
            </goals>
          </execution>
          <execution>
            <id>run</id>
            <phase>deploy</phase>
            <goals>
              <goal>sshexec</goal>
            </goals>
          </execution>
        </executions>
      </plugin> -->
    </plugins>
  </build>
  
  <repositories>
    <repository>
      <id>Spring Milestone</id>
      <url>http://repo.spring.io/libs-milestone/</url>
    </repository>
    
    <repository>
      <id>Starter</id>
      <url>https://raw.githubusercontent.com/man4j/starter/master/maven</url>
    </repository>
  </repositories>
</project>